package Interfaces;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class JIAutos extends javax.swing.JInternalFrame {
    int idCliente;
   DefaultTableModel model = new DefaultTableModel();
    
    public JIAutos() {
        initComponents();
        this.setSize(794, 548);
        this.setTitle("Autos");
        
        tblAutos = new JTable(model);
            jScrollPane1.setViewportView(tblAutos);
            
            
            model.addColumn("Serie");
            model.addColumn("Modelo");
            model.addColumn("Marca");
            model.addColumn("Color");
            model.addColumn("Motor");
            model.addColumn("Transmisiones");
            model.addColumn("Direcciones");
            model.addColumn("Redimiento");
            model.addColumn("Caballo de fuerza");
            
            
             actualizarTabla();

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select NombreC from clientes");
            ResultSet rs = pst.executeQuery();

            cn.close();

        } catch (SQLException e) {
            System.err.println("Error al llenar los Clientes. " + e);
            JOptionPane.showMessageDialog(null, "Error al mostrar información, Contacte al Administrador");
        }
            
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtSerie = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtModelo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMotor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTrans = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCaballo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtColor = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        consultar = new javax.swing.JButton();
        agregar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        actualizar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAutos = new javax.swing.JTable();
        jTextField10 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtRendimiento = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtano = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Taller P.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(29, 81, 81));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtSerie.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        txtSerie.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerieActionPerformed(evt);
            }
        });
        jPanel1.add(txtSerie, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 160, 25));

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Serie:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 115, -1, -1));

        txtModelo.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        txtModelo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModeloActionPerformed(evt);
            }
        });
        jPanel1.add(txtModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 160, 25));

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Modelo:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 75, -1, -1));

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Motor:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 155, -1, -1));

        txtMotor.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        txtMotor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtMotor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMotorActionPerformed(evt);
            }
        });
        jPanel1.add(txtMotor, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 160, 25));

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Trasmisiones:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 195, -1, -1));

        txtTrans.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        txtTrans.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTransActionPerformed(evt);
            }
        });
        jPanel1.add(txtTrans, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 160, 25));

        jLabel5.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Dirreccion:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 235, -1, -1));

        txtDireccion.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        txtDireccion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });
        jPanel1.add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, 160, 25));

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Caballo fuerza");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, -1));

        txtCaballo.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        txtCaballo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtCaballo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCaballoActionPerformed(evt);
            }
        });
        jPanel1.add(txtCaballo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, 160, 25));

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Color:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 75, -1, -1));

        txtColor.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        txtColor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtColorActionPerformed(evt);
            }
        });
        jPanel1.add(txtColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, 160, 25));

        jLabel8.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Año");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 150, -1, -1));

        txtMarca.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        txtMarca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMarcaActionPerformed(evt);
            }
        });
        jPanel1.add(txtMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, 160, 25));

        jLabel10.setFont(new java.awt.Font("Roboto Black", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Autos");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, -1, -1));

        consultar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        consultar.setText("Consultar");
        consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarActionPerformed(evt);
            }
        });
        jPanel1.add(consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 240, -1, -1));

        agregar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });
        jPanel1.add(agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, -1, -1));

        eliminar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });
        jPanel1.add(eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(591, 240, -1, -1));

        actualizar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        actualizar.setText("Actualizar");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });
        jPanel1.add(actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(492, 240, -1, -1));

        jLabel11.setBackground(new java.awt.Color(102, 255, 102));
        jLabel11.setToolTipText("");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 40, 160, 150));

        tblAutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9"
            }
        ));
        jScrollPane1.setViewportView(tblAutos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 730, 110));
        jPanel1.add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 330, 30));

        jButton5.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jButton5.setText("Buscar Auto");
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 340, 190, 30));

        jLabel13.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Redimiento:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 275, -1, -1));

        txtRendimiento.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        txtRendimiento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtRendimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRendimientoActionPerformed(evt);
            }
        });
        jPanel1.add(txtRendimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, 160, 25));

        jLabel9.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Marca:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 115, -1, -1));

        txtano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtanoActionPerformed(evt);
            }
        });
        jPanel1.add(txtano, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, 160, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerieActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtSerieActionPerformed

    private void txtModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModeloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModeloActionPerformed

    private void txtMotorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMotorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMotorActionPerformed

    private void txtTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTransActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTransActionPerformed

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionActionPerformed

    private void txtCaballoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCaballoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCaballoActionPerformed

    private void txtColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtColorActionPerformed

    private void txtMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMarcaActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        // TODO add your handling code here:
          int validacion = 0;
        String modelo, serie, motor,trasmisiones,direccion,rendimiento,color,marca,caballo,ano;
      
        modelo = txtModelo.getText().trim();
        serie = txtSerie.getText().trim();
        motor = txtMotor.getText().trim();
        trasmisiones = txtTrans.getText().trim();
        direccion = txtDireccion.getText().trim();
        rendimiento = txtRendimiento.getText().trim();
        color = txtColor.getText().trim();
        marca = txtMarca.getText().trim();
        caballo = txtCaballo.getText().trim();
        ano = txtano.getText().trim();

        if (modelo.equals("")) {
            txtModelo.setBackground(Color.red);
            validacion++;
        }
        if (serie.equals("")) {
            txtSerie.setBackground(Color.red);
            validacion++;
        }
        if (motor.equals("")) {
            txtMotor.setBackground(Color.red);
            validacion++;
        }
        if (trasmisiones.equals("")) {
            txtTrans.setBackground(Color.red);
            validacion++;
        }
        if (direccion.equals("")) {
            txtDireccion.setBackground(Color.red);
            validacion++;
        }
        if (rendimiento.equals("")) {
            txtRendimiento.setBackground(Color.red);
            validacion++;
        }
        if (color.equals("")) {
            txtColor.setBackground(Color.red);
            validacion++;
        }

        if (marca.equals("")) {
            txtMarca.setBackground(Color.red);
            validacion++;
        }
        if (ano.equals("")) {
            txtano.setBackground(Color.red);
            validacion++;
        }

        if (validacion == 0) {

            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "insert into ciudad values (?,?,?,?,?,?,?,?,?,?)");
                pst.setString(1, "0");
                pst.setString(2, "0");
                pst.setString(3, serie);
                pst.setString(4, ano);
                pst.setString(5, motor);
                pst.setString(6, rendimiento);
                pst.setString(7, caballo);
                pst.setString(8, color);
                pst.setString(9, direccion);
                pst.setString(10, trasmisiones);
                
                pst.executeUpdate();
                cn.close();

                txtModelo.setText("");
                txtColor.setText("");
                txtDireccion.setText("");
                txtMarca.setText("");
                txtMotor.setText("");
                txtRendimiento.setText("");
                txtSerie.setText("");
                txtTrans.setText("");

                JOptionPane.showMessageDialog(null, "Registro de Auto Exitoso");
            } catch (SQLException e) {
                System.err.println("Error en Registrar auto" + e);
                JOptionPane.showMessageDialog(null, "¡¡ERROR al registrar!!, contacte al administrador.");

            }
            actualizarTabla();
        } else {
            JOptionPane.showMessageDialog(null, "Debes llenar todos los campos.");
        }
   
        
    }//GEN-LAST:event_agregarActionPerformed

    private void consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarActionPerformed
        // TODO add your handling code here:
        
         int idAutos = Integer.parseInt(tblAutos.getValueAt(tblAutos.getSelectedRow(), 0).toString());

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("SELECT NumeroSerie, NombreModelo, NombreMarca, Color, NumeroMotor, Transmisión, Direccion, Rendimiento, CaballosdeFuerza"
                    + "FROM autos inner join modelo on autos.idAutos = modelo.idModelo "
                    + "inner join marca on modelo.idModelo = marca.idMarca where autos.idAutos =" + idAutos);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                txtSerie.setText(rs.getString("NumeroSerie"));
                txtModelo.setText(rs.getNString("NombreModelo"));
                txtMarca.setText(rs.getNString("NombreMarca"));
                txtColor.setText(rs.getString("Color"));
                txtMotor.setText(rs.getString("NumeroMotor"));
                txtTrans.setText(rs.getString("Transmisión"));
                 txtDireccion.setText(rs.getString("Direccion"));
                txtRendimiento.setText(rs.getString("Rendimiento"));
                txtCaballo.setText(rs.getString("CaballosdeFuerza"));
            }
            cn.close();

        } catch (SQLException e) {
            System.err.println("Error en cargar Auto " + e);
            JOptionPane.showMessageDialog(null, "Error al cargar, contacte al administrador");
        }
        
        
        
    }//GEN-LAST:event_consultarActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        // TODO add your handling code here:
            int validacion = 0;
        String modelo, serie, motor,trasmisiones,direccion,rendimiento,color,marca,caballo,ano;
        int idAutos = Integer.parseInt(tblAutos.getValueAt(tblAutos.getSelectedRow(), 0).toString());
      
        modelo = txtModelo.getText().trim();
        serie = txtSerie.getText().trim();
        motor = txtMotor.getText().trim();
        trasmisiones = txtTrans.getText().trim();
        direccion = txtDireccion.getText().trim();
        rendimiento = txtRendimiento.getText().trim();
        color = txtColor.getText().trim();
        marca = txtMarca.getText().trim();
        caballo = txtCaballo.getText().trim();
        ano = txtano.getText().trim();

        if (modelo.equals("")) {
            txtModelo.setBackground(Color.red);
            validacion++;
        }
        if (serie.equals("")) {
            txtSerie.setBackground(Color.red);
            validacion++;
        }
        if (motor.equals("")) {
            txtMotor.setBackground(Color.red);
            validacion++;
        }
        if (trasmisiones.equals("")) {
            txtTrans.setBackground(Color.red);
            validacion++;
        }
        if (direccion.equals("")) {
            txtDireccion.setBackground(Color.red);
            validacion++;
        }
        if (rendimiento.equals("")) {
            txtRendimiento.setBackground(Color.red);
            validacion++;
        }
        if (color.equals("")) {
            txtColor.setBackground(Color.red);
            validacion++;
        }

        if (marca.equals("")) {
            txtMarca.setBackground(Color.red);
            validacion++;
        }
        if (ano.equals("")) {
            txtano.setBackground(Color.red);
            validacion++;
        }
        
           if (validacion == 0) {
            try {

                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "select * from autos where NumeroSerie = '" + serie + "' and not idAutos = '" + idAutos + "'");
                ResultSet rs = pst.executeQuery();

                if (rs.next()) {
              
                    txtSerie.setText(rs.getString("NumeroSerie"));
                    txtModelo.setText(rs.getNString("NombreModelo"));
                    txtMarca.setText(rs.getNString("NombreMarca"));
                    txtColor.setText(rs.getString("Color"));
                    txtMotor.setText(rs.getString("NumeroMotor"));
                    txtTrans.setText(rs.getString("Transmisión"));
                    txtDireccion.setText(rs.getString("Direccion"));
                    txtRendimiento.setText(rs.getString("Rendimiento"));
                    txtCaballo.setText(rs.getString("CaballosdeFuerza"));
                    JOptionPane.showMessageDialog(null, "Nombre de Auto no disponible");
                    cn.close();
                } else {
                    Connection cn2 = Conexion.conectar();
                    PreparedStatement pest = cn2.prepareStatement(
                            "update autos set NumeroSerie=?,   Año=?, NumeroMotor=?, Rendimiento=?, CaballosdeFuerza=?, Color=? , Direccion =? ,Trasmisió=? "
                            + "where idAutos = '" + idAutos + "'");
                //pendiente//
                    pest.setString(3, serie);
                    pest.setString(4, ano);
                    pest.setString(5, motor);
                    pest.setString(6, rendimiento);
                    pest.setString(7, caballo);
                    pest.setString(8, color);
                    pest.setString(9, direccion);
                    pest.setString(10, trasmisiones);

                    pest.executeUpdate();
                    cn2.close();

                    JOptionPane.showMessageDialog(null, "Modificación correcta");
                    txtSerie.setText(rs.getString("NumeroSerie"));
                    txtModelo.setText(rs.getNString("NombreModelo"));
                    txtMarca.setText(rs.getNString("NombreMarca"));
                    txtColor.setText(rs.getString("Color"));
                    txtMotor.setText(rs.getString("NumeroMotor"));
                    txtTrans.setText(rs.getString("Transmisión"));
                    txtDireccion.setText(rs.getString("Direccion"));
                    txtRendimiento.setText(rs.getString("Rendimiento"));
                    txtCaballo.setText(rs.getString("CaballosdeFuerza"));
                }
                actualizarTabla();

            } catch (SQLException e) {
                System.err.println("Error al actualizar el Autos " + e);
                JOptionPane.showMessageDialog(null, "¡¡ERROR al actualizar!!, contacte al administrador.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debes llenar todos los campos.");
        }     
    }//GEN-LAST:event_actualizarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        // TODO add your handling code here:
            int idAuto = Integer.parseInt(tblAutos.getValueAt(tblAutos.getSelectedRow(), 0).toString());

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "delete from autos where idAutos = '" + idAuto + "'");
            pst.executeUpdate();
            cn.close();
            JOptionPane.showMessageDialog(null, "El Auto seleccionado fue dado de baja");
            actualizarTabla();
        } catch (SQLException er) {
            System.err.println("Error en eliminar Autos " + er);
            JOptionPane.showMessageDialog(null, "Error en eliminar, contacte al administrador");

        }
        
        
        
        
    }//GEN-LAST:event_eliminarActionPerformed

    private void txtRendimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRendimientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRendimientoActionPerformed

    private void txtanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtanoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtanoActionPerformed

    public void actualizarTabla() {

        model.setRowCount(0);
        Object[] fila = new Object[9];
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("SELECT NumeroSerie, NombreModelo, NombreMarca, Color, NumeroMotor, Transmisión, Direccion, Rendimiento, CaballosdeFuerza"
                    + "FROM autos inner join modelo on autos.idAutos = modelo.idModelo "
                    + "inner join marca on modelo.idModelo = marca.idMarca");

            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                for (int i = 0; i < 9; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            cn.close();

        } catch (SQLException e) {
            System.err.println("Error al llenar tabla. " + e);
            JOptionPane.showMessageDialog(null, "Error al mostrar información, Contacte al Administrador");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JButton agregar;
    private javax.swing.JButton consultar;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTable tblAutos;
    private javax.swing.JTextField txtCaballo;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtMotor;
    private javax.swing.JTextField txtRendimiento;
    private javax.swing.JTextField txtSerie;
    private javax.swing.JTextField txtTrans;
    private javax.swing.JTextField txtano;
    // End of variables declaration//GEN-END:variables
}
